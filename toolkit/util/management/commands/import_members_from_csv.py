"""Import members from a CSV file generated by simplelists
No header row
The 5 columns are
first_name second_name email confirmed/unconfirmed date
Rows with blank names are not imported
"""

import csv

from django.core.management.base import BaseCommand, CommandError
from toolkit.members.models import Member

FILENAME = "upcoming.csv"


class Command(BaseCommand):
    help = "Import members from a CSV file"

    def _load_data(self, filename):
        data = []
        with open(filename, "rt") as f:
            reader = csv.reader(f)
            for row in reader:
                if len(row) == 5:
                    data.append(row)
        return data

    def _try_get_member_by_email(self, email):
        try:
            return Member.objects.get(email__iexact=email)
        except Member.MultipleObjectsReturned:
            self.stdout.write(
                self.style.WARNING(
                    "Multiple members with the same email address: {0}".format(
                        email
                    )
                )
            )
            return Member.objects.filter(email__iexact=email).first()
        except Member.DoesNotExist:
            pass
        return None

    def handle(self, *args, **options):

        self.stdout.write("Trying to read {0}".format(FILENAME))
        member_list = self._load_data(FILENAME)
        new_member_count = 0

        for member in member_list:
            first_name = member[1].strip()
            second_name = member[0].strip()
            full_name = "%s %s" % (first_name, second_name)
            full_name = full_name.title().strip()
            email = member[2]
            # self.stdout.write('Considering %s <%s>' % (
            #     full_name, email))
            mem = self._try_get_member_by_email(email)
            if mem:
                self.stdout.write(
                    self.style.SUCCESS(
                        "%s <%s> already in database" % (mem.name, mem.email)
                    )
                )
            else:
                if not full_name:
                    self.stdout.write(
                        self.style.WARNING(
                            "Not adding <%s> as no name" % email
                        )
                    )
                    continue
                else:
                    self.stdout.write("Adding %s <%s>" % (full_name, email))
                    new_member = Member()
                    new_member.name = full_name
                    new_member.email = email
                    new_member.is_member = False
                    new_member.membership_expires = None
                    new_member.save()
                    new_member_count = new_member_count + 1

        self.stdout.write(
            self.style.SUCCESS("%d members added" % new_member_count)
        )
